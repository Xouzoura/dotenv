set -g @plugin_path ~/.tmux/plugins
bind r source-file ~/.tmux/.tmux.conf
# -------------- KEY BINDINGS --------------
# Change default prefix to C-a
set -g prefix C-a
unbind C-b
bind-key C-a send-prefix
# Switch panes with | - 
unbind %
unbind r
unbind o # For sessionx
unbind '"'
unbind f
unbind p
unbind t # Who the fuck needs a clock
bind p paste-buffer
bind - split-window -v
bind | split-window -h 
# Resize sizes
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5
bind -r m resize-pane -Z

## Switch panes with C-hjkl or Alt-hjkl
## a) (default mode)
# bind -n M-h select-pane -L  
# bind -n M-j select-pane -D  
# bind -n M-k select-pane -U  
# bind -n M-l select-pane -R  
# bind -n C-h select-pane -L  
# bind -n C-j select-pane -D  
# bind -n C-k select-pane -U  
# bind -n C-l select-pane -R  
# bind-key -n C-o select-pane -l
## b) Alternative to also make the pane inactive (BUT GOES TO LAST PANE)
# bind -n M-h select-pane -L \; run-shell "~/scripts/set-inactive.sh"  
# bind -n M-j select-pane -D \; run-shell "~/scripts/set-inactive.sh"  
# bind -n M-k select-pane -U \; run-shell "~/scripts/set-inactive.sh"  
# bind -n M-l select-pane -R \; run-shell "~/scripts/set-inactive.sh"  
# bind -n C-h select-pane -L \; run-shell "~/scripts/set-inactive.sh"  
# bind -n C-j select-pane -D \; run-shell "~/scripts/set-inactive.sh"  
# bind -n C-k select-pane -U \; run-shell "~/scripts/set-inactive.sh"  
# bind -n C-l select-pane -R \; run-shell "~/scripts/set-inactive.sh"  
# bind-key -n C-o select-pane -l \; run-shell "~/scripts/set-inactive.sh" 
## c) (ACTIVE) Alternative to also make the pane inactive (without going to last pane)
bind -n M-h run-shell "~/scripts/set-inactive.sh" \; select-pane -L \; run-shell "~/scripts/set-inactive.sh true"  
bind -n M-j run-shell "~/scripts/set-inactive.sh" \; select-pane -D \; run-shell "~/scripts/set-inactive.sh true"  
bind -n M-k run-shell "~/scripts/set-inactive.sh" \; select-pane -U \; run-shell "~/scripts/set-inactive.sh true"  
bind -n M-l run-shell "~/scripts/set-inactive.sh" \; select-pane -R \; run-shell "~/scripts/set-inactive.sh true"  
bind -n C-h run-shell "~/scripts/set-inactive.sh" \; select-pane -L \; run-shell "~/scripts/set-inactive.sh true"  
bind -n C-j run-shell "~/scripts/set-inactive.sh" \; select-pane -D \; run-shell "~/scripts/set-inactive.sh true"  
bind -n C-k run-shell "~/scripts/set-inactive.sh" \; select-pane -U \; run-shell "~/scripts/set-inactive.sh true"  
bind -n C-l run-shell "~/scripts/set-inactive.sh" \; select-pane -R \; run-shell "~/scripts/set-inactive.sh true"  
bind-key -n C-o run-shell "~/scripts/set-inactive.sh" \; select-pane -l \; run-shell "~/scripts/set-inactive.sh true"
# Example to run
# bind-key O run-shell '~/scripts/set-inactive.sh'
# Yanking simplified
# Key bindings to make tmux work like vim
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"
unbind -T copy-mode-vi Enter
# Bind 'v' to enter copy mode and start selection
bind v copy-mode \; send -X begin-selection
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
set -g @yank_selection_mouse 'clipboard'
set -g @easy-motion-prefix "Space"
set -g @thumbs-key f
set -g @fuzzback-bind F
set -g @floax-bind t
# settings
setw -g mode-keys vi
set -g mouse on
set -g status-position top       
set -g base-index 1
set -g pane-base-index 1
set -g detach-on-destroy off    
set -g escape-time 0            
set -g history-limit 1000000    
set -g renumber-windows on      
set -g set-clipboard on  

# ----------------- PLUGINS -----------------
# tpm = plugin manager
set -g @plugin 'tmux-plugins/tpm'
# sensible = default settings for tmux for easiness of access 
set -g @plugin 'tmux-plugins/tmux-sensible'
# Yank = easiness to yank with prefix+y what i've written
set -g @plugin 'tmux-plugins/tmux-yank'
# Resurrect = save tmux sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
# Continuum = auto save tmux sessions and pick up where you left of
set -g @plugin 'tmux-plugins/tmux-continuum'
# Thumbs = press prefix + space to find teach in terminal that matches important stuff
set -g @plugin 'fcsonline/tmux-thumbs'
# Fzf = fuzzy finder for tmux
# set -g @plugin 'sainnhe/tmux-fzf'
# jump to a specific word in tmux with short jump
set -g @plugin 'IngoMeyer441/tmux-easy-motion'
# Fzf url = open urls in tmux with fzf
set -g @plugin 'wfxr/tmux-fzf-url'
# Catppuccino = a theme for tmux
set -g @plugin 'omerxx/catppuccin-tmux' 
# set -g @plugin 'catppuccin/tmux'
# Dependencies of catppuccin
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
# Session-x is the prefix+o that allows you to switch between sessions
set -g @plugin 'omerxx/tmux-sessionx'
# Navigator: switch between vim and tmux panes
set -g @plugin 'christoomey/vim-tmux-navigator'
# Fuzzy seach with c-a + f
set -g @plugin 'roosta/tmux-fuzzback'
# Plugin settings
set -g @sessionx-bind 'o'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '75%'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-filter-current 'false'
set -g @sessionx-preview-enabled 'true'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @catppuccin_flavour 'macchiato' # or frappe, macchiato, mocha
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
# TODO: decide
# set -g @catppuccin_window_default_color "#4c71cf"
# set -g @catppuccin_window_current_color "#{thm_red}" # text color
# set -g @catppuccin_pane_active_border_style "fg=#{thm_orange}"
# set -g @catppuccin_window_default_color "#{thm_blue}"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
set -g @catppuccin_status_modules_right "directory cpu battery date_time"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{b:pane_current_path}"
set -g @catppuccin_meetings_text "#($HOME/.config/tmux/scripts/cal.sh)"
set -g @catppuccin_date_time_text "%H:%M"
set -g @resurrect-strategy-nvim 'session'
set-option -g status-right-length 140
set-option -g status-right-style default
# set-option -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) "
# Change the color of the INACTIVE tmux panes
set-option -a terminal-features 'xterm-256color:RGB'
setw -g window-style 'bg=colour236'
# setw -g window-active-style ',bg=#313244'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
